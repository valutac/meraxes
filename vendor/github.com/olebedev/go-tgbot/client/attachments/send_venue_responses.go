// Code generated by go-swagger; DO NOT EDIT.

package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// SendVenueReader is a Reader for the SendVenue structure.
type SendVenueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendVenueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSendVenueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendVenueBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSendVenueUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSendVenueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSendVenueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewSendVenueEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSendVenueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendVenueOK creates a SendVenueOK with default headers values
func NewSendVenueOK() *SendVenueOK {
	return &SendVenueOK{}
}

/*SendVenueOK handles this case with default header values.

SendVenueOK send venue o k
*/
type SendVenueOK struct {
	Payload *models.ResponseMessage
}

func (o *SendVenueOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueOK  %+v", 200, o.Payload)
}

func (o *SendVenueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVenueBadRequest creates a SendVenueBadRequest with default headers values
func NewSendVenueBadRequest() *SendVenueBadRequest {
	return &SendVenueBadRequest{}
}

/*SendVenueBadRequest handles this case with default header values.

Bad Request
*/
type SendVenueBadRequest struct {
	Payload *models.Error
}

func (o *SendVenueBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueBadRequest  %+v", 400, o.Payload)
}

func (o *SendVenueBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVenueUnauthorized creates a SendVenueUnauthorized with default headers values
func NewSendVenueUnauthorized() *SendVenueUnauthorized {
	return &SendVenueUnauthorized{}
}

/*SendVenueUnauthorized handles this case with default header values.

Unauthorized
*/
type SendVenueUnauthorized struct {
	Payload *models.Error
}

func (o *SendVenueUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueUnauthorized  %+v", 401, o.Payload)
}

func (o *SendVenueUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVenueForbidden creates a SendVenueForbidden with default headers values
func NewSendVenueForbidden() *SendVenueForbidden {
	return &SendVenueForbidden{}
}

/*SendVenueForbidden handles this case with default header values.

Forbidden
*/
type SendVenueForbidden struct {
	Payload *models.Error
}

func (o *SendVenueForbidden) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueForbidden  %+v", 403, o.Payload)
}

func (o *SendVenueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVenueNotFound creates a SendVenueNotFound with default headers values
func NewSendVenueNotFound() *SendVenueNotFound {
	return &SendVenueNotFound{}
}

/*SendVenueNotFound handles this case with default header values.

Not Found
*/
type SendVenueNotFound struct {
	Payload *models.Error
}

func (o *SendVenueNotFound) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueNotFound  %+v", 404, o.Payload)
}

func (o *SendVenueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVenueEnhanceYourCalm creates a SendVenueEnhanceYourCalm with default headers values
func NewSendVenueEnhanceYourCalm() *SendVenueEnhanceYourCalm {
	return &SendVenueEnhanceYourCalm{}
}

/*SendVenueEnhanceYourCalm handles this case with default header values.

Flood
*/
type SendVenueEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *SendVenueEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *SendVenueEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVenueInternalServerError creates a SendVenueInternalServerError with default headers values
func NewSendVenueInternalServerError() *SendVenueInternalServerError {
	return &SendVenueInternalServerError{}
}

/*SendVenueInternalServerError handles this case with default header values.

Internal
*/
type SendVenueInternalServerError struct {
	Payload *models.Error
}

func (o *SendVenueInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVenue][%d] sendVenueInternalServerError  %+v", 500, o.Payload)
}

func (o *SendVenueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
