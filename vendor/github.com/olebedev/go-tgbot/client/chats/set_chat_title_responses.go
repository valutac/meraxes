// Code generated by go-swagger; DO NOT EDIT.

package chats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// SetChatTitleReader is a Reader for the SetChatTitle structure.
type SetChatTitleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetChatTitleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetChatTitleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSetChatTitleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSetChatTitleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSetChatTitleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSetChatTitleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewSetChatTitleEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSetChatTitleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetChatTitleOK creates a SetChatTitleOK with default headers values
func NewSetChatTitleOK() *SetChatTitleOK {
	return &SetChatTitleOK{}
}

/*SetChatTitleOK handles this case with default header values.

SetChatTitleOK set chat title o k
*/
type SetChatTitleOK struct {
	Payload *models.ResponseBool
}

func (o *SetChatTitleOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleOK  %+v", 200, o.Payload)
}

func (o *SetChatTitleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseBool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetChatTitleBadRequest creates a SetChatTitleBadRequest with default headers values
func NewSetChatTitleBadRequest() *SetChatTitleBadRequest {
	return &SetChatTitleBadRequest{}
}

/*SetChatTitleBadRequest handles this case with default header values.

Bad Request
*/
type SetChatTitleBadRequest struct {
	Payload *models.Error
}

func (o *SetChatTitleBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleBadRequest  %+v", 400, o.Payload)
}

func (o *SetChatTitleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetChatTitleUnauthorized creates a SetChatTitleUnauthorized with default headers values
func NewSetChatTitleUnauthorized() *SetChatTitleUnauthorized {
	return &SetChatTitleUnauthorized{}
}

/*SetChatTitleUnauthorized handles this case with default header values.

Unauthorized
*/
type SetChatTitleUnauthorized struct {
	Payload *models.Error
}

func (o *SetChatTitleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleUnauthorized  %+v", 401, o.Payload)
}

func (o *SetChatTitleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetChatTitleForbidden creates a SetChatTitleForbidden with default headers values
func NewSetChatTitleForbidden() *SetChatTitleForbidden {
	return &SetChatTitleForbidden{}
}

/*SetChatTitleForbidden handles this case with default header values.

Forbidden
*/
type SetChatTitleForbidden struct {
	Payload *models.Error
}

func (o *SetChatTitleForbidden) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleForbidden  %+v", 403, o.Payload)
}

func (o *SetChatTitleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetChatTitleNotFound creates a SetChatTitleNotFound with default headers values
func NewSetChatTitleNotFound() *SetChatTitleNotFound {
	return &SetChatTitleNotFound{}
}

/*SetChatTitleNotFound handles this case with default header values.

Not Found
*/
type SetChatTitleNotFound struct {
	Payload *models.Error
}

func (o *SetChatTitleNotFound) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleNotFound  %+v", 404, o.Payload)
}

func (o *SetChatTitleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetChatTitleEnhanceYourCalm creates a SetChatTitleEnhanceYourCalm with default headers values
func NewSetChatTitleEnhanceYourCalm() *SetChatTitleEnhanceYourCalm {
	return &SetChatTitleEnhanceYourCalm{}
}

/*SetChatTitleEnhanceYourCalm handles this case with default header values.

Flood
*/
type SetChatTitleEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *SetChatTitleEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *SetChatTitleEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetChatTitleInternalServerError creates a SetChatTitleInternalServerError with default headers values
func NewSetChatTitleInternalServerError() *SetChatTitleInternalServerError {
	return &SetChatTitleInternalServerError{}
}

/*SetChatTitleInternalServerError handles this case with default header values.

Internal
*/
type SetChatTitleInternalServerError struct {
	Payload *models.Error
}

func (o *SetChatTitleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bot{token}/setChatTitle][%d] setChatTitleInternalServerError  %+v", 500, o.Payload)
}

func (o *SetChatTitleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
