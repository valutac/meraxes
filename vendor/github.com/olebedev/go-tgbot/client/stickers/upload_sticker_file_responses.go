// Code generated by go-swagger; DO NOT EDIT.

package stickers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// UploadStickerFileReader is a Reader for the UploadStickerFile structure.
type UploadStickerFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadStickerFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUploadStickerFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUploadStickerFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUploadStickerFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUploadStickerFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUploadStickerFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewUploadStickerFileEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUploadStickerFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadStickerFileOK creates a UploadStickerFileOK with default headers values
func NewUploadStickerFileOK() *UploadStickerFileOK {
	return &UploadStickerFileOK{}
}

/*UploadStickerFileOK handles this case with default header values.

UploadStickerFileOK upload sticker file o k
*/
type UploadStickerFileOK struct {
	Payload *models.File
}

func (o *UploadStickerFileOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileOK  %+v", 200, o.Payload)
}

func (o *UploadStickerFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.File)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadStickerFileBadRequest creates a UploadStickerFileBadRequest with default headers values
func NewUploadStickerFileBadRequest() *UploadStickerFileBadRequest {
	return &UploadStickerFileBadRequest{}
}

/*UploadStickerFileBadRequest handles this case with default header values.

Bad Request
*/
type UploadStickerFileBadRequest struct {
	Payload *models.Error
}

func (o *UploadStickerFileBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileBadRequest  %+v", 400, o.Payload)
}

func (o *UploadStickerFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadStickerFileUnauthorized creates a UploadStickerFileUnauthorized with default headers values
func NewUploadStickerFileUnauthorized() *UploadStickerFileUnauthorized {
	return &UploadStickerFileUnauthorized{}
}

/*UploadStickerFileUnauthorized handles this case with default header values.

Unauthorized
*/
type UploadStickerFileUnauthorized struct {
	Payload *models.Error
}

func (o *UploadStickerFileUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileUnauthorized  %+v", 401, o.Payload)
}

func (o *UploadStickerFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadStickerFileForbidden creates a UploadStickerFileForbidden with default headers values
func NewUploadStickerFileForbidden() *UploadStickerFileForbidden {
	return &UploadStickerFileForbidden{}
}

/*UploadStickerFileForbidden handles this case with default header values.

Forbidden
*/
type UploadStickerFileForbidden struct {
	Payload *models.Error
}

func (o *UploadStickerFileForbidden) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileForbidden  %+v", 403, o.Payload)
}

func (o *UploadStickerFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadStickerFileNotFound creates a UploadStickerFileNotFound with default headers values
func NewUploadStickerFileNotFound() *UploadStickerFileNotFound {
	return &UploadStickerFileNotFound{}
}

/*UploadStickerFileNotFound handles this case with default header values.

Not Found
*/
type UploadStickerFileNotFound struct {
	Payload *models.Error
}

func (o *UploadStickerFileNotFound) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileNotFound  %+v", 404, o.Payload)
}

func (o *UploadStickerFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadStickerFileEnhanceYourCalm creates a UploadStickerFileEnhanceYourCalm with default headers values
func NewUploadStickerFileEnhanceYourCalm() *UploadStickerFileEnhanceYourCalm {
	return &UploadStickerFileEnhanceYourCalm{}
}

/*UploadStickerFileEnhanceYourCalm handles this case with default header values.

Flood
*/
type UploadStickerFileEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *UploadStickerFileEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *UploadStickerFileEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadStickerFileInternalServerError creates a UploadStickerFileInternalServerError with default headers values
func NewUploadStickerFileInternalServerError() *UploadStickerFileInternalServerError {
	return &UploadStickerFileInternalServerError{}
}

/*UploadStickerFileInternalServerError handles this case with default header values.

Internal
*/
type UploadStickerFileInternalServerError struct {
	Payload *models.Error
}

func (o *UploadStickerFileInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bot{token}/uploadStickerFile][%d] uploadStickerFileInternalServerError  %+v", 500, o.Payload)
}

func (o *UploadStickerFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
