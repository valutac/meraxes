// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ParseMode parse mode
// swagger:model ParseMode
type ParseMode string

const (
	// ParseModeMarkdown captures enum value "Markdown"
	ParseModeMarkdown ParseMode = "Markdown"
	// ParseModeHTML captures enum value "Html"
	ParseModeHTML ParseMode = "Html"
)

// for schema
var parseModeEnum []interface{}

func init() {
	var res []ParseMode
	if err := json.Unmarshal([]byte(`["Markdown","Html"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		parseModeEnum = append(parseModeEnum, v)
	}
}

func (m ParseMode) validateParseModeEnum(path, location string, value ParseMode) error {
	if err := validate.Enum(path, location, value, parseModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this parse mode
func (m ParseMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateParseModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
