// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SendPhotoLinkBody send photo link body
// swagger:model SendPhotoLinkBody
type SendPhotoLinkBody struct {

	// caption
	Caption string `json:"caption,omitempty"`

	// chat id
	// Required: true
	ChatID interface{} `json:"chat_id"`

	// disable notification
	DisableNotification bool `json:"disable_notification,omitempty"`

	// photo
	// Required: true
	Photo *string `json:"photo"`

	// reply markup
	ReplyMarkup interface{} `json:"reply_markup,omitempty"`

	// reply to message id
	ReplyToMessageID int64 `json:"reply_to_message_id,omitempty"`
}

// Validate validates this send photo link body
func (m *SendPhotoLinkBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChatID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePhoto(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SendPhotoLinkBody) validateChatID(formats strfmt.Registry) error {

	return nil
}

func (m *SendPhotoLinkBody) validatePhoto(formats strfmt.Registry) error {

	if err := validate.Required("photo", "body", m.Photo); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SendPhotoLinkBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SendPhotoLinkBody) UnmarshalBinary(b []byte) error {
	var res SendPhotoLinkBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
