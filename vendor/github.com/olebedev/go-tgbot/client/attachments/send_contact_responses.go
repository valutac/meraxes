// Code generated by go-swagger; DO NOT EDIT.

package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// SendContactReader is a Reader for the SendContact structure.
type SendContactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendContactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSendContactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendContactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSendContactUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSendContactForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSendContactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewSendContactEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSendContactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendContactOK creates a SendContactOK with default headers values
func NewSendContactOK() *SendContactOK {
	return &SendContactOK{}
}

/*SendContactOK handles this case with default header values.

SendContactOK send contact o k
*/
type SendContactOK struct {
	Payload *models.ResponseMessage
}

func (o *SendContactOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactOK  %+v", 200, o.Payload)
}

func (o *SendContactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendContactBadRequest creates a SendContactBadRequest with default headers values
func NewSendContactBadRequest() *SendContactBadRequest {
	return &SendContactBadRequest{}
}

/*SendContactBadRequest handles this case with default header values.

Bad Request
*/
type SendContactBadRequest struct {
	Payload *models.Error
}

func (o *SendContactBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactBadRequest  %+v", 400, o.Payload)
}

func (o *SendContactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendContactUnauthorized creates a SendContactUnauthorized with default headers values
func NewSendContactUnauthorized() *SendContactUnauthorized {
	return &SendContactUnauthorized{}
}

/*SendContactUnauthorized handles this case with default header values.

Unauthorized
*/
type SendContactUnauthorized struct {
	Payload *models.Error
}

func (o *SendContactUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactUnauthorized  %+v", 401, o.Payload)
}

func (o *SendContactUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendContactForbidden creates a SendContactForbidden with default headers values
func NewSendContactForbidden() *SendContactForbidden {
	return &SendContactForbidden{}
}

/*SendContactForbidden handles this case with default header values.

Forbidden
*/
type SendContactForbidden struct {
	Payload *models.Error
}

func (o *SendContactForbidden) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactForbidden  %+v", 403, o.Payload)
}

func (o *SendContactForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendContactNotFound creates a SendContactNotFound with default headers values
func NewSendContactNotFound() *SendContactNotFound {
	return &SendContactNotFound{}
}

/*SendContactNotFound handles this case with default header values.

Not Found
*/
type SendContactNotFound struct {
	Payload *models.Error
}

func (o *SendContactNotFound) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactNotFound  %+v", 404, o.Payload)
}

func (o *SendContactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendContactEnhanceYourCalm creates a SendContactEnhanceYourCalm with default headers values
func NewSendContactEnhanceYourCalm() *SendContactEnhanceYourCalm {
	return &SendContactEnhanceYourCalm{}
}

/*SendContactEnhanceYourCalm handles this case with default header values.

Flood
*/
type SendContactEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *SendContactEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *SendContactEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendContactInternalServerError creates a SendContactInternalServerError with default headers values
func NewSendContactInternalServerError() *SendContactInternalServerError {
	return &SendContactInternalServerError{}
}

/*SendContactInternalServerError handles this case with default header values.

Internal
*/
type SendContactInternalServerError struct {
	Payload *models.Error
}

func (o *SendContactInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendContact][%d] sendContactInternalServerError  %+v", 500, o.Payload)
}

func (o *SendContactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
