// Code generated by go-swagger; DO NOT EDIT.

package updates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// GetWebhookInfoReader is a Reader for the GetWebhookInfo structure.
type GetWebhookInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWebhookInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWebhookInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetWebhookInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetWebhookInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetWebhookInfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetWebhookInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewGetWebhookInfoEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetWebhookInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetWebhookInfoOK creates a GetWebhookInfoOK with default headers values
func NewGetWebhookInfoOK() *GetWebhookInfoOK {
	return &GetWebhookInfoOK{}
}

/*GetWebhookInfoOK handles this case with default header values.

Response Body
*/
type GetWebhookInfoOK struct {
	Payload *models.WebhookInfo
}

func (o *GetWebhookInfoOK) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoOK  %+v", 200, o.Payload)
}

func (o *GetWebhookInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebhookInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhookInfoBadRequest creates a GetWebhookInfoBadRequest with default headers values
func NewGetWebhookInfoBadRequest() *GetWebhookInfoBadRequest {
	return &GetWebhookInfoBadRequest{}
}

/*GetWebhookInfoBadRequest handles this case with default header values.

Bad Request
*/
type GetWebhookInfoBadRequest struct {
	Payload *models.Error
}

func (o *GetWebhookInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetWebhookInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhookInfoUnauthorized creates a GetWebhookInfoUnauthorized with default headers values
func NewGetWebhookInfoUnauthorized() *GetWebhookInfoUnauthorized {
	return &GetWebhookInfoUnauthorized{}
}

/*GetWebhookInfoUnauthorized handles this case with default header values.

Unauthorized
*/
type GetWebhookInfoUnauthorized struct {
	Payload *models.Error
}

func (o *GetWebhookInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWebhookInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhookInfoForbidden creates a GetWebhookInfoForbidden with default headers values
func NewGetWebhookInfoForbidden() *GetWebhookInfoForbidden {
	return &GetWebhookInfoForbidden{}
}

/*GetWebhookInfoForbidden handles this case with default header values.

Forbidden
*/
type GetWebhookInfoForbidden struct {
	Payload *models.Error
}

func (o *GetWebhookInfoForbidden) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoForbidden  %+v", 403, o.Payload)
}

func (o *GetWebhookInfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhookInfoNotFound creates a GetWebhookInfoNotFound with default headers values
func NewGetWebhookInfoNotFound() *GetWebhookInfoNotFound {
	return &GetWebhookInfoNotFound{}
}

/*GetWebhookInfoNotFound handles this case with default header values.

Not Found
*/
type GetWebhookInfoNotFound struct {
	Payload *models.Error
}

func (o *GetWebhookInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoNotFound  %+v", 404, o.Payload)
}

func (o *GetWebhookInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhookInfoEnhanceYourCalm creates a GetWebhookInfoEnhanceYourCalm with default headers values
func NewGetWebhookInfoEnhanceYourCalm() *GetWebhookInfoEnhanceYourCalm {
	return &GetWebhookInfoEnhanceYourCalm{}
}

/*GetWebhookInfoEnhanceYourCalm handles this case with default header values.

Flood
*/
type GetWebhookInfoEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *GetWebhookInfoEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *GetWebhookInfoEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWebhookInfoInternalServerError creates a GetWebhookInfoInternalServerError with default headers values
func NewGetWebhookInfoInternalServerError() *GetWebhookInfoInternalServerError {
	return &GetWebhookInfoInternalServerError{}
}

/*GetWebhookInfoInternalServerError handles this case with default header values.

Internal
*/
type GetWebhookInfoInternalServerError struct {
	Payload *models.Error
}

func (o *GetWebhookInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bot{token}/getWebhookInfo][%d] getWebhookInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWebhookInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
