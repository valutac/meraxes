// Code generated by go-swagger; DO NOT EDIT.

package chats

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// ExportChatInviteLinkReader is a Reader for the ExportChatInviteLink structure.
type ExportChatInviteLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportChatInviteLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExportChatInviteLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewExportChatInviteLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewExportChatInviteLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewExportChatInviteLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewExportChatInviteLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewExportChatInviteLinkEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewExportChatInviteLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportChatInviteLinkOK creates a ExportChatInviteLinkOK with default headers values
func NewExportChatInviteLinkOK() *ExportChatInviteLinkOK {
	return &ExportChatInviteLinkOK{}
}

/*ExportChatInviteLinkOK handles this case with default header values.

ExportChatInviteLinkOK export chat invite link o k
*/
type ExportChatInviteLinkOK struct {
	Payload string
}

func (o *ExportChatInviteLinkOK) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkOK  %+v", 200, o.Payload)
}

func (o *ExportChatInviteLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportChatInviteLinkBadRequest creates a ExportChatInviteLinkBadRequest with default headers values
func NewExportChatInviteLinkBadRequest() *ExportChatInviteLinkBadRequest {
	return &ExportChatInviteLinkBadRequest{}
}

/*ExportChatInviteLinkBadRequest handles this case with default header values.

Bad Request
*/
type ExportChatInviteLinkBadRequest struct {
	Payload *models.Error
}

func (o *ExportChatInviteLinkBadRequest) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkBadRequest  %+v", 400, o.Payload)
}

func (o *ExportChatInviteLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportChatInviteLinkUnauthorized creates a ExportChatInviteLinkUnauthorized with default headers values
func NewExportChatInviteLinkUnauthorized() *ExportChatInviteLinkUnauthorized {
	return &ExportChatInviteLinkUnauthorized{}
}

/*ExportChatInviteLinkUnauthorized handles this case with default header values.

Unauthorized
*/
type ExportChatInviteLinkUnauthorized struct {
	Payload *models.Error
}

func (o *ExportChatInviteLinkUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkUnauthorized  %+v", 401, o.Payload)
}

func (o *ExportChatInviteLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportChatInviteLinkForbidden creates a ExportChatInviteLinkForbidden with default headers values
func NewExportChatInviteLinkForbidden() *ExportChatInviteLinkForbidden {
	return &ExportChatInviteLinkForbidden{}
}

/*ExportChatInviteLinkForbidden handles this case with default header values.

Forbidden
*/
type ExportChatInviteLinkForbidden struct {
	Payload *models.Error
}

func (o *ExportChatInviteLinkForbidden) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkForbidden  %+v", 403, o.Payload)
}

func (o *ExportChatInviteLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportChatInviteLinkNotFound creates a ExportChatInviteLinkNotFound with default headers values
func NewExportChatInviteLinkNotFound() *ExportChatInviteLinkNotFound {
	return &ExportChatInviteLinkNotFound{}
}

/*ExportChatInviteLinkNotFound handles this case with default header values.

Not Found
*/
type ExportChatInviteLinkNotFound struct {
	Payload *models.Error
}

func (o *ExportChatInviteLinkNotFound) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkNotFound  %+v", 404, o.Payload)
}

func (o *ExportChatInviteLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportChatInviteLinkEnhanceYourCalm creates a ExportChatInviteLinkEnhanceYourCalm with default headers values
func NewExportChatInviteLinkEnhanceYourCalm() *ExportChatInviteLinkEnhanceYourCalm {
	return &ExportChatInviteLinkEnhanceYourCalm{}
}

/*ExportChatInviteLinkEnhanceYourCalm handles this case with default header values.

Flood
*/
type ExportChatInviteLinkEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *ExportChatInviteLinkEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *ExportChatInviteLinkEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportChatInviteLinkInternalServerError creates a ExportChatInviteLinkInternalServerError with default headers values
func NewExportChatInviteLinkInternalServerError() *ExportChatInviteLinkInternalServerError {
	return &ExportChatInviteLinkInternalServerError{}
}

/*ExportChatInviteLinkInternalServerError handles this case with default header values.

Internal
*/
type ExportChatInviteLinkInternalServerError struct {
	Payload *models.Error
}

func (o *ExportChatInviteLinkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bot{token}/exportChatInviteLink][%d] exportChatInviteLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *ExportChatInviteLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
