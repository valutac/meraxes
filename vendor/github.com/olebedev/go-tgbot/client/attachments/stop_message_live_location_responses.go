// Code generated by go-swagger; DO NOT EDIT.

package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// StopMessageLiveLocationReader is a Reader for the StopMessageLiveLocation structure.
type StopMessageLiveLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopMessageLiveLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStopMessageLiveLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStopMessageLiveLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewStopMessageLiveLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStopMessageLiveLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStopMessageLiveLocationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewStopMessageLiveLocationEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStopMessageLiveLocationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStopMessageLiveLocationOK creates a StopMessageLiveLocationOK with default headers values
func NewStopMessageLiveLocationOK() *StopMessageLiveLocationOK {
	return &StopMessageLiveLocationOK{}
}

/*StopMessageLiveLocationOK handles this case with default header values.

StopMessageLiveLocationOK stop message live location o k
*/
type StopMessageLiveLocationOK struct {
	Payload *models.ResponseMessage
}

func (o *StopMessageLiveLocationOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationOK  %+v", 200, o.Payload)
}

func (o *StopMessageLiveLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopMessageLiveLocationBadRequest creates a StopMessageLiveLocationBadRequest with default headers values
func NewStopMessageLiveLocationBadRequest() *StopMessageLiveLocationBadRequest {
	return &StopMessageLiveLocationBadRequest{}
}

/*StopMessageLiveLocationBadRequest handles this case with default header values.

Bad Request
*/
type StopMessageLiveLocationBadRequest struct {
	Payload *models.Error
}

func (o *StopMessageLiveLocationBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationBadRequest  %+v", 400, o.Payload)
}

func (o *StopMessageLiveLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopMessageLiveLocationUnauthorized creates a StopMessageLiveLocationUnauthorized with default headers values
func NewStopMessageLiveLocationUnauthorized() *StopMessageLiveLocationUnauthorized {
	return &StopMessageLiveLocationUnauthorized{}
}

/*StopMessageLiveLocationUnauthorized handles this case with default header values.

Unauthorized
*/
type StopMessageLiveLocationUnauthorized struct {
	Payload *models.Error
}

func (o *StopMessageLiveLocationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationUnauthorized  %+v", 401, o.Payload)
}

func (o *StopMessageLiveLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopMessageLiveLocationForbidden creates a StopMessageLiveLocationForbidden with default headers values
func NewStopMessageLiveLocationForbidden() *StopMessageLiveLocationForbidden {
	return &StopMessageLiveLocationForbidden{}
}

/*StopMessageLiveLocationForbidden handles this case with default header values.

Forbidden
*/
type StopMessageLiveLocationForbidden struct {
	Payload *models.Error
}

func (o *StopMessageLiveLocationForbidden) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationForbidden  %+v", 403, o.Payload)
}

func (o *StopMessageLiveLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopMessageLiveLocationNotFound creates a StopMessageLiveLocationNotFound with default headers values
func NewStopMessageLiveLocationNotFound() *StopMessageLiveLocationNotFound {
	return &StopMessageLiveLocationNotFound{}
}

/*StopMessageLiveLocationNotFound handles this case with default header values.

Not Found
*/
type StopMessageLiveLocationNotFound struct {
	Payload *models.Error
}

func (o *StopMessageLiveLocationNotFound) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationNotFound  %+v", 404, o.Payload)
}

func (o *StopMessageLiveLocationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopMessageLiveLocationEnhanceYourCalm creates a StopMessageLiveLocationEnhanceYourCalm with default headers values
func NewStopMessageLiveLocationEnhanceYourCalm() *StopMessageLiveLocationEnhanceYourCalm {
	return &StopMessageLiveLocationEnhanceYourCalm{}
}

/*StopMessageLiveLocationEnhanceYourCalm handles this case with default header values.

Flood
*/
type StopMessageLiveLocationEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *StopMessageLiveLocationEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *StopMessageLiveLocationEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopMessageLiveLocationInternalServerError creates a StopMessageLiveLocationInternalServerError with default headers values
func NewStopMessageLiveLocationInternalServerError() *StopMessageLiveLocationInternalServerError {
	return &StopMessageLiveLocationInternalServerError{}
}

/*StopMessageLiveLocationInternalServerError handles this case with default header values.

Internal
*/
type StopMessageLiveLocationInternalServerError struct {
	Payload *models.Error
}

func (o *StopMessageLiveLocationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bot{token}/stopMessageLiveLocation][%d] stopMessageLiveLocationInternalServerError  %+v", 500, o.Payload)
}

func (o *StopMessageLiveLocationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
