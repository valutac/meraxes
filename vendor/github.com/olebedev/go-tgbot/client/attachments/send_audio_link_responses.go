// Code generated by go-swagger; DO NOT EDIT.

package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// SendAudioLinkReader is a Reader for the SendAudioLink structure.
type SendAudioLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendAudioLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSendAudioLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendAudioLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSendAudioLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSendAudioLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSendAudioLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 420:
		result := NewSendAudioLinkEnhanceYourCalm()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSendAudioLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendAudioLinkOK creates a SendAudioLinkOK with default headers values
func NewSendAudioLinkOK() *SendAudioLinkOK {
	return &SendAudioLinkOK{}
}

/*SendAudioLinkOK handles this case with default header values.

SendAudioLinkOK send audio link o k
*/
type SendAudioLinkOK struct {
	Payload *models.ResponseMessage
}

func (o *SendAudioLinkOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkOK  %+v", 200, o.Payload)
}

func (o *SendAudioLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendAudioLinkBadRequest creates a SendAudioLinkBadRequest with default headers values
func NewSendAudioLinkBadRequest() *SendAudioLinkBadRequest {
	return &SendAudioLinkBadRequest{}
}

/*SendAudioLinkBadRequest handles this case with default header values.

Bad Request
*/
type SendAudioLinkBadRequest struct {
	Payload *models.Error
}

func (o *SendAudioLinkBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkBadRequest  %+v", 400, o.Payload)
}

func (o *SendAudioLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendAudioLinkUnauthorized creates a SendAudioLinkUnauthorized with default headers values
func NewSendAudioLinkUnauthorized() *SendAudioLinkUnauthorized {
	return &SendAudioLinkUnauthorized{}
}

/*SendAudioLinkUnauthorized handles this case with default header values.

Unauthorized
*/
type SendAudioLinkUnauthorized struct {
	Payload *models.Error
}

func (o *SendAudioLinkUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkUnauthorized  %+v", 401, o.Payload)
}

func (o *SendAudioLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendAudioLinkForbidden creates a SendAudioLinkForbidden with default headers values
func NewSendAudioLinkForbidden() *SendAudioLinkForbidden {
	return &SendAudioLinkForbidden{}
}

/*SendAudioLinkForbidden handles this case with default header values.

Forbidden
*/
type SendAudioLinkForbidden struct {
	Payload *models.Error
}

func (o *SendAudioLinkForbidden) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkForbidden  %+v", 403, o.Payload)
}

func (o *SendAudioLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendAudioLinkNotFound creates a SendAudioLinkNotFound with default headers values
func NewSendAudioLinkNotFound() *SendAudioLinkNotFound {
	return &SendAudioLinkNotFound{}
}

/*SendAudioLinkNotFound handles this case with default header values.

Not Found
*/
type SendAudioLinkNotFound struct {
	Payload *models.Error
}

func (o *SendAudioLinkNotFound) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkNotFound  %+v", 404, o.Payload)
}

func (o *SendAudioLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendAudioLinkEnhanceYourCalm creates a SendAudioLinkEnhanceYourCalm with default headers values
func NewSendAudioLinkEnhanceYourCalm() *SendAudioLinkEnhanceYourCalm {
	return &SendAudioLinkEnhanceYourCalm{}
}

/*SendAudioLinkEnhanceYourCalm handles this case with default header values.

Flood
*/
type SendAudioLinkEnhanceYourCalm struct {
	Payload *models.Error
}

func (o *SendAudioLinkEnhanceYourCalm) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkEnhanceYourCalm  %+v", 420, o.Payload)
}

func (o *SendAudioLinkEnhanceYourCalm) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendAudioLinkInternalServerError creates a SendAudioLinkInternalServerError with default headers values
func NewSendAudioLinkInternalServerError() *SendAudioLinkInternalServerError {
	return &SendAudioLinkInternalServerError{}
}

/*SendAudioLinkInternalServerError handles this case with default header values.

Internal
*/
type SendAudioLinkInternalServerError struct {
	Payload *models.Error
}

func (o *SendAudioLinkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendAudio#link][%d] sendAudioLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *SendAudioLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
